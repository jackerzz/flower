; Sample supervisor config file.
;
; For more information on the config file, please see:
; http://supervisord.org/configuration.html
;
; Notes:
;  - Shell expansion ("~" or "$HOME") is not supported.  Environment
;    variables can be expanded using this syntax: "%(ENV_HOME)s".
;  - Quotes around values are not supported, except in the case of
;    the environment= options as shown below.
;  - Comments must have a leading space: "a=b ;comment" not "a=b;comment".
;  - Command will be truncated if it looks like a config file comment, e.g.
;    "command=bash -c 'foo ; bar'" will truncate to "command=bash -c 'foo ".
;
; Warning:
;  Paths throughout this example file use /tmp because it is available on most
;  systems.  You will likely need to change these to locations more appropriate
;  for your system.  Some systems periodically delete older files in /tmp.
;  Notably, if the socket file defined in the [unix_http_server] section below
;  is deleted, supervisorctl will be unable to connect to supervisord.

[unix_http_server]
file=/tmp/supervisor.sock   ; the path to the socket file
;chmod=0700                 ; socket file mode (default 0700)
;chown=nobody:nogroup       ; socket file uid:gid owner
;username=user              ; default is no username (open server)
;password=123               ; default is no password (open server)

; Security Warning:
;  The inet HTTP server is not enabled by default.  The inet HTTP server is
;  enabled by uncommenting the [inet_http_server] section below.  The inet
;  HTTP server is intended for use within a trusted environment only.  It
;  should only be bound to localhost or only accessible from within an
;  isolated, trusted network.  The inet HTTP server does not support any
;  form of encryption.  The inet HTTP server does not use authentication
;  by default (see the username= and password= options to add authentication).
;  Never expose the inet HTTP server to the public internet.

[inet_http_server]         ; inet (TCP) server disabled by default
port=0.0.0.0:9001        ; ip_address:port specifier, *:port for all iface
username=user              ; default is no username (open server)
password=123               ; default is no password (open server)

[supervisord]
logfile=/tmp/supervisord.log ; main log file; default $CWD/supervisord.log
logfile_maxbytes=50MB        ; max main logfile bytes b4 rotation; default 50MB
logfile_backups=10           ; # of main logfile backups; 0 means none, default 10
loglevel=info                ; log level; default info; others: debug,warn,trace
pidfile=/tmp/supervisord.pid ; supervisord pidfile; default supervisord.pid
nodaemon=false               ; start in foreground if true; default false
silent=false                 ; no logs to stdout if true; default false
minfds=1024                  ; min. avail startup file descriptors; default 1024
minprocs=200                 ; min. avail process descriptors;default 200
;umask=022                   ; process file creation umask; default 022
;user=supervisord            ; setuid to this UNIX account at startup; recommended if root
;identifier=supervisor       ; supervisord identifier, default is 'supervisor'
;directory=/tmp              ; default is not to cd during start
;nocleanup=true              ; don't clean up tempfiles at start; default false
;childlogdir=/tmp            ; 'AUTO' child log dir, default $TEMP
;environment=KEY="value"     ; key value pairs to add to environment
;strip_ansi=false            ; strip ansi escape codes in logs; def. false

; The rpcinterface:supervisor section must remain in the config file for
; RPC (supervisorctl/web interface) to work.  Additional interfaces may be
; added by defining them in separate [rpcinterface:x] sections.

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

; The supervisorctl section configures how supervisorctl will connect to
; supervisord.  configure it match the settings in either the unix_http_server
; or inet_http_server section.

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket
;serverurl=http://127.0.0.1:9001 ; use an http:// url to specify an inet socket
;username=chris              ; should be same as in [*_http_server] if set
;password=123                ; should be same as in [*_http_server] if set
;prompt=mysupervisor         ; cmd line prompt (default "supervisor")
;history_file=~/.sc_history  ; use readline history if available

; The sample program section below shows all possible program subsection values.
; Create one or more 'real' program: sections to be able to control them under
; supervisor.

[program:celery-beat]
command=celery worker -A task -l info -P eventlet ; 启动命令
process_name=%(program_name)s ; 进程名
#numprocs=3                    ; 进程数量
directory=/root/monter         ; 工作路径
;umask=022                     ; umask for process (default None)
priority=999                  ; 优先级。优先级低，最先启动，关闭的时候最后关闭
autostart=true                ; supervisor启动后自动启动
startsecs=1                   ; 启动多少秒后是running认为启动成功
;startretries=3                ; 最大启动重试次数 (default 3)
autorestart=true               ; 子进程挂掉自动重启 (def: unexpected)
;exitcodes=0                   ; 'expected' exit codes used with autorestart (default 0)
stopsignal=TERM               ; 进程停止信号，停止celery worker时使用TERM, (TERM, HUP, INT, QUIT, KILL, USR1, or USR2)
stopwaitsecs=30               ; 等待停止最大时间，超过此时间会强制kill (default 10)
stopasgroup=true              ; 停掉子进程的子进程（保证不会出现孤儿进程）
;killasgroup=true             ; kill进程及其子进程，直接发送KILL信号不会等待进程退出
;user=chrism                   ; 管理子进程的用户
redirect_stderr=true          ; redirect 日志 stderr to stdout
stdout_logfile=celery_.log   ; 日志
stdout_logfile_maxbytes=50MB   ; 单个日志文件最大大小  (default 50MB)
stdout_logfile_backups=20     ; 日志文件数量  (default 10)
stdout_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
stdout_events_enabled=false   ; emit events on stdout writes (default false)
stdout_syslog=false           ; send stdout to syslog with process name (default false)
stderr_logfile=celery_err.log       ; 错误日志
stderr_logfile_maxbytes=10MB   ; max # logfile bytes b4 rotation (default 50MB)
stderr_logfile_backups=10     ; # of stderr logfile backups (0 means none, default 10)
stderr_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
stderr_events_enabled=false   ; emit events on stderpidr writes (default false)
stderr_syslog=false           ; send stderr to syslog with process name (default false)
environment=PATH="/root/miniconda3/bin"      ; 环境变量，子进程间不共享
;serverurl=AUTO                ; override serverurl computation (childutils)

[program:celery-beat1]
command=celery worker -A task -l info -P eventlet ; 启动命令
process_name=%(program_name)s ; 进程名
#numprocs=3                    ; 进程数量
directory=/root/monter         ; 工作路径
;umask=022                     ; umask for process (default None)
priority=999                  ; 优先级。优先级低，最先启动，关闭的时候最后关闭
autostart=true                ; supervisor启动后自动启动
startsecs=1                   ; 启动多少秒后是running认为启动成功
;startretries=3                ; 最大启动重试次数 (default 3)
autorestart=true               ; 子进程挂掉自动重启 (def: unexpected)
;exitcodes=0                   ; 'expected' exit codes used with autorestart (default 0)
stopsignal=TERM               ; 进程停止信号，停止celery worker时使用TERM, (TERM, HUP, INT, QUIT, KILL, USR1, or USR2)
stopwaitsecs=30               ; 等待停止最大时间，超过此时间会强制kill (default 10)
stopasgroup=true              ; 停掉子进程的子进程（保证不会出现孤儿进程）
;killasgroup=true             ; kill进程及其子进程，直接发送KILL信号不会等待进程退出
;user=chrism                   ; 管理子进程的用户
redirect_stderr=true          ; redirect 日志 stderr to stdout
stdout_logfile=celery_.log   ; 日志
stdout_logfile_maxbytes=50MB   ; 单个日志文件最大大小  (default 50MB)
stdout_logfile_backups=20     ; 日志文件数量  (default 10)
stdout_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
stdout_events_enabled=false   ; emit events on stdout writes (default false)
stdout_syslog=false           ; send stdout to syslog with process name (default false)
stderr_logfile=celery_err.log       ; 错误日志
stderr_logfile_maxbytes=10MB   ; max # logfile bytes b4 rotation (default 50MB)
stderr_logfile_backups=10     ; # of stderr logfile backups (0 means none, default 10)
stderr_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
stderr_events_enabled=false   ; emit events on stderpidr writes (default false)
stderr_syslog=false           ; send stderr to syslog with process name (default false)
environment=PATH="/root/miniconda3/bin"      ; 环境变量，子进程间不共享
;serverurl=AUTO                ; override serverurl computation (childutils)